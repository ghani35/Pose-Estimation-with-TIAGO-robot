;; Auto-generated. Do not edit!


(when (boundp 'tf_lookup::TfStreamGoal)
  (if (not (find-package "TF_LOOKUP"))
    (make-package "TF_LOOKUP"))
  (shadow 'TfStreamGoal (find-package "TF_LOOKUP")))
(unless (find-package "TF_LOOKUP::TFSTREAMGOAL")
  (make-package "TF_LOOKUP::TFSTREAMGOAL"))

(in-package "ROS")
;;//! \htmlinclude TfStreamGoal.msg.html


(defclass tf_lookup::TfStreamGoal
  :super ros::object
  :slots (_transforms _subscription_id _update ))

(defmethod tf_lookup::TfStreamGoal
  (:init
   (&key
    ((:transforms __transforms) (let (r) (dotimes (i 0) (push (instance tf_lookup::Subscription :init) r)) r))
    ((:subscription_id __subscription_id) "")
    ((:update __update) nil)
    )
   (send-super :init)
   (setq _transforms __transforms)
   (setq _subscription_id (string __subscription_id))
   (setq _update __update)
   self)
  (:transforms
   (&rest __transforms)
   (if (keywordp (car __transforms))
       (send* _transforms __transforms)
     (progn
       (if __transforms (setq _transforms (car __transforms)))
       _transforms)))
  (:subscription_id
   (&optional __subscription_id)
   (if __subscription_id (setq _subscription_id __subscription_id)) _subscription_id)
  (:update
   (&optional __update)
   (if __update (setq _update __update)) _update)
  (:serialization-length
   ()
   (+
    ;; tf_lookup/Subscription[] _transforms
    (apply #'+ (send-all _transforms :serialization-length)) 4
    ;; string _subscription_id
    4 (length _subscription_id)
    ;; bool _update
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; tf_lookup/Subscription[] _transforms
     (write-long (length _transforms) s)
     (dolist (elem _transforms)
       (send elem :serialize s)
       )
     ;; string _subscription_id
       (write-long (length _subscription_id) s) (princ _subscription_id s)
     ;; bool _update
       (if _update (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; tf_lookup/Subscription[] _transforms
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _transforms (let (r) (dotimes (i n) (push (instance tf_lookup::Subscription :init) r)) r))
     (dolist (elem- _transforms)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; string _subscription_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _subscription_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _update
     (setq _update (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get tf_lookup::TfStreamGoal :md5sum-) "e00b5ec9adf5765d948ec802ab721a4a")
(setf (get tf_lookup::TfStreamGoal :datatype-) "tf_lookup/TfStreamGoal")
(setf (get tf_lookup::TfStreamGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
Subscription[] transforms
string subscription_id
bool update

================================================================================
MSG: tf_lookup/Subscription
string target
string source

")



(provide :tf_lookup/TfStreamGoal "e00b5ec9adf5765d948ec802ab721a4a")


