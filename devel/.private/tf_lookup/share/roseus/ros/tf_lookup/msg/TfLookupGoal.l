;; Auto-generated. Do not edit!


(when (boundp 'tf_lookup::TfLookupGoal)
  (if (not (find-package "TF_LOOKUP"))
    (make-package "TF_LOOKUP"))
  (shadow 'TfLookupGoal (find-package "TF_LOOKUP")))
(unless (find-package "TF_LOOKUP::TFLOOKUPGOAL")
  (make-package "TF_LOOKUP::TFLOOKUPGOAL"))

(in-package "ROS")
;;//! \htmlinclude TfLookupGoal.msg.html


(defclass tf_lookup::TfLookupGoal
  :super ros::object
  :slots (_target_frame _source_frame _transform_time ))

(defmethod tf_lookup::TfLookupGoal
  (:init
   (&key
    ((:target_frame __target_frame) "")
    ((:source_frame __source_frame) "")
    ((:transform_time __transform_time) (instance ros::time :init))
    )
   (send-super :init)
   (setq _target_frame (string __target_frame))
   (setq _source_frame (string __source_frame))
   (setq _transform_time __transform_time)
   self)
  (:target_frame
   (&optional __target_frame)
   (if __target_frame (setq _target_frame __target_frame)) _target_frame)
  (:source_frame
   (&optional __source_frame)
   (if __source_frame (setq _source_frame __source_frame)) _source_frame)
  (:transform_time
   (&optional __transform_time)
   (if __transform_time (setq _transform_time __transform_time)) _transform_time)
  (:serialization-length
   ()
   (+
    ;; string _target_frame
    4 (length _target_frame)
    ;; string _source_frame
    4 (length _source_frame)
    ;; time _transform_time
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _target_frame
       (write-long (length _target_frame) s) (princ _target_frame s)
     ;; string _source_frame
       (write-long (length _source_frame) s) (princ _source_frame s)
     ;; time _transform_time
       (write-long (send _transform_time :sec) s) (write-long (send _transform_time :nsec) s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _target_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _target_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _source_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _source_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; time _transform_time
     (send _transform_time :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send _transform_time :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get tf_lookup::TfLookupGoal :md5sum-) "bb9d983758e61f286b43546ac9c0b080")
(setf (get tf_lookup::TfLookupGoal :datatype-) "tf_lookup/TfLookupGoal")
(setf (get tf_lookup::TfLookupGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
string target_frame #The frame to which data should be transformed
string source_frame #The frame where the data originated
time transform_time

")



(provide :tf_lookup/TfLookupGoal "bb9d983758e61f286b43546ac9c0b080")


