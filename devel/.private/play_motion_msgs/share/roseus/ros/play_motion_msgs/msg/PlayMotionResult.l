;; Auto-generated. Do not edit!


(when (boundp 'play_motion_msgs::PlayMotionResult)
  (if (not (find-package "PLAY_MOTION_MSGS"))
    (make-package "PLAY_MOTION_MSGS"))
  (shadow 'PlayMotionResult (find-package "PLAY_MOTION_MSGS")))
(unless (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT")
  (make-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))

(in-package "ROS")
;;//! \htmlinclude PlayMotionResult.msg.html


(intern "*SUCCEEDED*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*SUCCEEDED* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*SUCCEEDED* 1)
(intern "*MOTION_NOT_FOUND*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*MOTION_NOT_FOUND* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*MOTION_NOT_FOUND* -1)
(intern "*CONTROLLER_BUSY*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*CONTROLLER_BUSY* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*CONTROLLER_BUSY* -3)
(intern "*MISSING_CONTROLLER*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*MISSING_CONTROLLER* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*MISSING_CONTROLLER* -4)
(intern "*TRAJECTORY_ERROR*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*TRAJECTORY_ERROR* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*TRAJECTORY_ERROR* -5)
(intern "*GOAL_NOT_REACHED*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*GOAL_NOT_REACHED* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*GOAL_NOT_REACHED* -6)
(intern "*PLANNER_OFFLINE*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*PLANNER_OFFLINE* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*PLANNER_OFFLINE* -7)
(intern "*NO_PLAN_FOUND*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*NO_PLAN_FOUND* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*NO_PLAN_FOUND* -8)
(intern "*OTHER_ERROR*" (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(shadow '*OTHER_ERROR* (find-package "PLAY_MOTION_MSGS::PLAYMOTIONRESULT"))
(defconstant play_motion_msgs::PlayMotionResult::*OTHER_ERROR* -42)
(defclass play_motion_msgs::PlayMotionResult
  :super ros::object
  :slots (_error_code _error_string ))

(defmethod play_motion_msgs::PlayMotionResult
  (:init
   (&key
    ((:error_code __error_code) 0)
    ((:error_string __error_string) "")
    )
   (send-super :init)
   (setq _error_code (round __error_code))
   (setq _error_string (string __error_string))
   self)
  (:error_code
   (&optional __error_code)
   (if __error_code (setq _error_code __error_code)) _error_code)
  (:error_string
   (&optional __error_string)
   (if __error_string (setq _error_string __error_string)) _error_string)
  (:serialization-length
   ()
   (+
    ;; int32 _error_code
    4
    ;; string _error_string
    4 (length _error_string)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _error_code
       (write-long _error_code s)
     ;; string _error_string
       (write-long (length _error_string) s) (princ _error_string s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _error_code
     (setq _error_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _error_string
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _error_string (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get play_motion_msgs::PlayMotionResult :md5sum-) "5560cb9a7211cb4b5a730f6f07ec124b")
(setf (get play_motion_msgs::PlayMotionResult :datatype-) "play_motion_msgs/PlayMotionResult")
(setf (get play_motion_msgs::PlayMotionResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 error_code
int32 SUCCEEDED             = 1
int32 MOTION_NOT_FOUND      = -1
# controller error codes
int32 CONTROLLER_BUSY       = -3
int32 MISSING_CONTROLLER    = -4
int32 TRAJECTORY_ERROR      = -5
int32 GOAL_NOT_REACHED      = -6
# planner error codes
int32 PLANNER_OFFLINE       = -7
int32 NO_PLAN_FOUND         = -8
#other
int32 OTHER_ERROR           = -42

string error_string

")



(provide :play_motion_msgs/PlayMotionResult "5560cb9a7211cb4b5a730f6f07ec124b")


